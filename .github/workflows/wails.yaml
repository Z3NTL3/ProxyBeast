# ProxyBeast by @z3ntl3
# 
# This is a CI/CD workflow to build and deploy to github releases
#
# If a PR passes the build additional reviews will be taken and it would be merged 
# when it satisfies our desires and requirements.
#
# See more of our work at simpaix.net
#
# Licensed under GNU
# - You can find the license file within the root of this directory in a file named LICENSE
#
# TODOS:
# - Add more dependency and assets caching
# - Support for Linux and deb packager
# - NSIS packager Windows

name: Wails Build & Deployment
run-name: Build & Deployment triggered by ${{ github.event_name }}

on:
    pull_request:
        types: [opened, edited, reopened]
    push:
        branches: 
            - main
        tags: 
          - v*
jobs:
    build:
        runs-on: ${{ matrix.os }}
        continue-on-error: ${{ matrix.minorVer }}
        strategy:
            matrix:
                os: [windows-latest, macos-latest] 
                version: [1.23]
                architecture: 
                  - x64
                minorVer: [true]

                include:
                  - os: windows-latest
                    version: 1.22.3
                    architecture: x64
                    minorVer: false

                  - os: macos-latest
                    version: 1.22.3
                    architecture: x64
                    minorVer: false
                    
        steps:
            - name: Clone Repo
              uses: actions/checkout@v4
            
            - name: Download Go
              uses: actions/setup-go@v5
              with: 
                go-version: ${{matrix.version}}
                architecture: ${{matrix.architecture}}
              
            - name: Install Node
              uses: actions/setup-node@v4
              with: 
                node-version: v20.18.0
                architecture: ${{ matrix.architecture }}

            - name: Cache Go Dependencies / win
              id: cache-godep
              if: ${{ contains(matrix.os, 'windows') }}
              uses: actions/cache@v4
              with:
                path: |
                  ~\AppData\Local\go-build
                  ~\go\pkg\mod
                key: ${{runner.os}}-go-${{runner.arch}}

            - name: Install Go dependencies for Wails
              if: steps.cache-godep.outputs.cache-hit != 'true'
              run: |
                go get .
                go install github.com/wailsapp/wails/v2/cmd/wails@latest 

            - name: Wails Doctor
              run: wails doctor

            #-----Build: Ubuntu & MacOS
            - name: Build / ubuntu-macos
              if: ${{ ! contains(matrix.os, 'windows') }}
              run: wails build
            #---------------end

            
        
            #---------------Macos
            - name: Build and bundle .app / MacOS
              if: ${{ contains(matrix.os, 'macos') }} 
              run: |
                cd ${{github.workspace}}/build/bin
                zip -r ProxyBeast-${{ runner.os }}-${{runner.arch}}-go${{matrix.version}}.zip ProxyBeast.app
                ls -R .
               
            - name: Release Build / MacOS
              uses: softprops/action-gh-release@v2
              if: startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'macos') && github.event_name == 'push' && matrix.version == vars.VER
              with:
                files: ${{github.workspace}}/build/bin/ProxyBeast-${{ runner.os }}-${{runner.arch}}-go${{matrix.version}}.zip
                prerelease: true
                name: ProxyBeast Deployment for ${{ github.ref_name }}
                body: |
                  Automatically build and deployed app binaries and bundles

                  - Ref: ${{github.ref}}
            #-----------Macos

            # ----------------Windows
            - name: Download WINGET / windows
              if: ${{ contains(matrix.os, 'windows') }}
              uses: Cyberboss/install-winget@v1
              
            - name: Wails Build / windows 
              if: ${{ contains(matrix.os, 'windows') }}
              run: wails build -nsis

            - name: Release Build / windows
              uses: softprops/action-gh-release@v2
              if: startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'windows') && github.event_name == 'push' && matrix.version == vars.VER
              with:
                files: ${{github.workspace}}\build\bin\ProxyBeast.exe
                prerelease: true
            # -----------------------------Windows